// File: ResumeRankerApplication.java package com.resume.ranker;

import org.springframework.boot.SpringApplication; import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication public class ResumeRankerApplication { public static void main(String[] args) { SpringApplication.run(ResumeRankerApplication.class, args); } }

// File: controller/ResumeController.java package com.resume.ranker.controller;

import com.resume.ranker.service.ResumeService; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.*; import org.springframework.web.multipart.MultipartFile;

@RestController @RequestMapping("/api") public class ResumeController {

@Autowired
private ResumeService resumeService;

@PostMapping("/upload/resume")
public ResponseEntity<?> uploadResume(@RequestParam("file") MultipartFile file) {
    return resumeService.processResume(file);
}

@PostMapping("/upload/jobdesc")
public ResponseEntity<?> uploadJobDesc(@RequestParam("file") MultipartFile file) {
    return resumeService.processJobDescription(file);
}

@GetMapping("/ranked-resumes")
public ResponseEntity<?> getRankedResumes() {
    return resumeService.getRankedResumes();
}

}

// File: service/ResumeService.java package com.resume.ranker.service;

import com.resume.ranker.model.Resume; import org.apache.pdfbox.pdmodel.PDDocument; import org.apache.pdfbox.text.PDFTextStripper; import org.springframework.http.ResponseEntity; import org.springframework.stereotype.Service; import org.springframework.web.multipart.MultipartFile; import org.springframework.web.client.RestTemplate;

import java.io.InputStream; import java.util.*;

@Service public class ResumeService {

private final RestTemplate restTemplate = new RestTemplate();
private String jobDescriptionText = "";
private List<Resume> resumeList = new ArrayList<>();

public ResponseEntity<?> processResume(MultipartFile file) {
    try {
        String resumeText = extractTextFromPdf(file.getInputStream());

        Map<String, String> payload = new HashMap<>();
        payload.put("resume", resumeText);
        payload.put("jobdesc", jobDescriptionText);

        Double score = restTemplate.postForObject("http://localhost:5000/score", payload, Double.class);

        Resume resume = new Resume();
        resume.setName(file.getOriginalFilename());
        resume.setResumeText(resumeText);
        resume.setScore(score);
        resumeList.add(resume);

        return ResponseEntity.ok("Resume score: " + score);
    } catch (Exception e) {
        return ResponseEntity.badRequest().body("Error processing resume: " + e.getMessage());
    }
}

public ResponseEntity<?> processJobDescription(MultipartFile file) {
    try {
        jobDescriptionText = extractTextFromPdf(file.getInputStream());
        return ResponseEntity.ok("Job description uploaded.");
    } catch (Exception e) {
        return ResponseEntity.badRequest().body("Error processing job description: " + e.getMessage());
    }
}

public ResponseEntity<?> getRankedResumes() {
    resumeList.sort(Comparator.comparingDouble(Resume::getScore).reversed());
    return ResponseEntity.ok(resumeList);
}

private String extractTextFromPdf(InputStream inputStream) throws Exception {
    PDDocument document = PDDocument.load(inputStream);
    PDFTextStripper stripper = new PDFTextStripper();
    String text = stripper.getText(document);
    document.close();
    return text;
}

}

// File: model/Resume.java package com.resume.ranker.model;

public class Resume { private String name; private String resumeText; private Double score;

public String getName() {
    return name;
}

public void setName(String name) {
    this.name = name;
}

public String getResumeText() {
    return resumeText;
}

public void setResumeText(String resumeText) {
    this.resumeText = resumeText;
}

public Double getScore() {
    return score;
}

public void setScore(Double score) {
    this.score = score;
}

}

